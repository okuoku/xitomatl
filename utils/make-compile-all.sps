#!r6rs
(import
  (rnrs)
  (only (xitomatl file-system base) directory-walk-enumerator)
  (only (xitomatl enumerators) fold/enumerator)
  (only (xitomatl file-system paths) path-join)
  (only (xitomatl irregex) irregex-match)
  (only (xitomatl match) match)
  (only (xitomatl ports) read-all)
  (only (xitomatl predicates) symbol<?)
  (only (xitomatl lists) remove-dups)
  (only (xitomatl common) fprintf))

(define libraries-names
  (fold/enumerator
   (directory-walk-enumerator)
   "./"
   (lambda (path dirs files syms accum)
     (if (irregex-match "\\./(\\.bzr|srfi|gtk|tests|utils|programs).*" path)
       (values dirs accum)
       (let loop ([files (filter (lambda (f) (irregex-match ".+\\.sls" f))
                                 files)]
                  [accum accum])
         (if (null? files)
           (values dirs accum)
           (loop (cdr files)
                 (match (call-with-input-file (path-join path (car files)) read-all)
                   [(('library name . _) (... 1))
                    (apply cons* (reverse (cons accum name)))]
                   [_ accum]))))))
   '()))

(define libraries-names/normalized
  (remove-dups
   (list-sort (lambda (a b)
                (let loop ([a a] [b b])
                  (cond [(null? a) #t]
                        [(null? b) #f]
                        [(symbol=? (car a) (car b))
                         (loop (cdr a) (cdr b))]
                        [else (symbol<? (car a) (car b))])))
              (map (lambda (l)
                     ;; remove possible version spec
                     (filter symbol? l))
                   libraries-names))))

;; for Ikarus
(call-with-output-file "compile-all.ikarus.sps"
  (lambda (fop)
    (define (pf . a) (apply fprintf fop a))
    (pf ";; Automatically generated by ~a\n" (car (command-line)))
    (pf ";; Do: ikarus --compile-dependencies compile-all.ikarus.sps\n")
    (pf "(import\n")
    (for-each (lambda (ln)
                (pf "  (only ~s)\n" ln))
              libraries-names/normalized)
    (pf ")\n")))

;; TODO?: For other implementations?
