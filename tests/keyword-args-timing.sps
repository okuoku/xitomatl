#!r6rs
(import 
  (rnrs)
  (only (xitomatl common-unstandard) add1 time)
  (xitomatl keyword-args))

;;; TODO: consult with people about better/other ways to measure

(define-syntax bigloop
  (syntax-rules ()
    [(_ n body ...)
     (let loop ([i 0])
       (unless (= i n)
         body ...
         (loop (add1 i))))]))

(define N #e1e8)
(display "\nN = ") (display N) (newline)

(define (n1 a) a)
(define/kw (dekw1 a) a)
(display "\nOne argument, define/kw expand-time processing:\n")
(display "===============================================\n")
(time (bigloop N))
(time (bigloop N (n1 1)))
(time (bigloop N (dekw1 [:- [a 1]])))
#|(define/kw-r (drkw1 a) a)
(display "\nOne argument, define/kw-r expand-time processing:\n")
(display "===============================================\n")
(time (bigloop N))
(time (bigloop N (n1 1)))
(time (bigloop N (drkw1 [:- [a 1]])))|#

(define (n2 a b) a)
(define/kw (dekw2 a b) a)
(display "\nTwo arguments, define/kw expand-time processing:\n")
(display "===============================================\n")
(time (bigloop N))
(time (bigloop N (n2 1 2)))
(time (bigloop N (dekw2 [:- [b 2] [a 1]])))
#|(define/kw-r (drkw2 a b) a)
(display "\nTwo arguments, define/kw-r expand-time processing:\n")
(display "===============================================\n")
(time (bigloop N))
(time (bigloop N (n2 1 2)))
(time (bigloop N (drkw2 [:- [b 2] [a 1]])))|#

(define (n3 a b c) a)
(define/kw (dekw3 a b c) a)
(display "\nThree arguments, define/kw expand-time processing:\n")
(display "===============================================\n")
(time (bigloop N))
(time (bigloop N (n3 1 2 3)))
(time (bigloop N (dekw3 [:- [b 2] [c 3] [a 1]])))
#|(define/kw-r (drkw3 a b c) a)
(display "\nThree arguments, define/kw-r expand-time processing:\n")
(display "===============================================\n")
(time (bigloop N))
(time (bigloop N (n3 1 2 3)))
(time (bigloop N (drkw3 [:- [b 2] [c 3] [a 1]])))|#


(define lekw1 (lambda/kw (a) a))
(display "\nOne argument, lambda/kw run-time processing:\n")
(display "===============================================\n")
(time (bigloop N))
(time (bigloop N (n1 1)))
(time (bigloop N (lekw1 [:- [a 1]])))
#|(define lrkw1 (lambda/kw-r (a) a))
(display "\nOne argument, lambda/kw-r run-time processing:\n")
(display "===============================================\n")
(time (bigloop N))
(time (bigloop N (n1 1)))
(time (bigloop N (lrkw1 [:- [a 1]])))|#

(define lekw2 (lambda/kw (a b) a))
(display "\nTwo arguments, lambda/kw run-time processing:\n")
(display "===============================================\n")
(time (bigloop N))
(time (bigloop N (n2 1 2)))
(time (bigloop N (lekw2 [:- [b 2] [a 1]])))
#|(define lrkw2 (lambda/kw-r (a b) a))
(display "\nTwo arguments, lambda/kw-r run-time processing:\n")
(display "===============================================\n")
(time (bigloop N))
(time (bigloop N (n2 1 2)))
(time (bigloop N (lrkw2 [:- [b 2] [a 1]])))|#

(define lekw3 (lambda/kw (a b c) a))
(display "\nThree arguments, lambda/kw run-time processing:\n")
(display "===============================================\n")
(time (bigloop N))
(time (bigloop N (n3 1 2 3)))
(time (bigloop N (lekw3 [:- [b 2] [c 3] [a 1]])))
#|(define lrkw3 (lambda/kw-r (a b c) a))
(display "\nThree arguments, lambda/kw-r run-time processing:\n")
(display "===============================================\n")
(time (bigloop N))
(time (bigloop N (n3 1 2 3)))
(time (bigloop N (lrkw3 [:- [b 2] [c 3] [a 1]])))|#


(define/kw (dekwr . kw-rest) kw-rest)
(define (n0) 1)
(display "\nkw-rest: Zero arguments, define/kw expand-time processing:\n")
(display "============================================================\n")
(time (bigloop N))
(time (bigloop N (n0)))
(time (bigloop N (dekwr)))
(display "\nkw-rest: One argument, define/kw expand-time processing:\n")
(display "==========================================================\n")
(time (bigloop N))
(time (bigloop N (n1 1)))
(time (bigloop N (dekwr [:- [a 1]])))
(display "\nkw-rest: Two arguments, define/kw expand-time processing:\n")
(display "===========================================================\n")
(time (bigloop N))
(time (bigloop N (n2 1 2)))
(time (bigloop N (dekwr [:- [b 2] [a 1]])))
(display "\nkw-rest: Three arguments, define/kw expand-time processing:\n")
(display "=============================================================\n")
(time (bigloop N))
(time (bigloop N (n3 1 2 3)))
(time (bigloop N (dekwr [:- [b 2] [c 3] [a 1]])))

(define lekwr (lambda/kw kw-rest kw-rest))
(display "\nkw-rest: Zero arguments, lambda/kw run-time processing:\n")
(display "============================================================\n")
(time (bigloop N))
(time (bigloop N (n0)))
(time (bigloop N (lekwr)))
(display "\nkw-rest: One argument, lambda/kw run-time processing:\n")
(display "==========================================================\n")
(time (bigloop N))
(time (bigloop N (n1 1)))
(time (bigloop N (lekwr [:- [a 1]])))
(display "\nkw-rest: Two arguments, lambda/kw run-time processing:\n")
(display "===========================================================\n")
(time (bigloop N))
(time (bigloop N (n2 1 2)))
(time (bigloop N (lekwr [:- [b 2] [a 1]])))
(display "\nkw-rest: Three arguments, lambda/kw run-time processing:\n")
(display "=============================================================\n")
(time (bigloop N))
(time (bigloop N (n3 1 2 3)))
(time (bigloop N (lekwr [:- [b 2] [c 3] [a 1]])))
